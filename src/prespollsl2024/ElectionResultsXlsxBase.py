import json
import os
from functools import cached_property

from openpyxl import load_workbook
from utils import File, JSONFile, Log

log = Log('ExcelResultsXlsx')


class ElectionResultsXlsxBase:
    def __init__(self, xlsx_path: str):
        self.xlsx_path = xlsx_path

    @cached_property
    def data_list(self) -> list[dict]:
        wb = load_workbook(self.xlsx_path)
        ws = wb['results']
        data_list = []
        for row in ws.iter_rows(min_row=2, values_only=True):
            data = {
                'pd_id': row[0],
                'ed_name': row[1],
                'pd_name': row[2],
                # space
                'result_time': row[4],
                # space
                'summary': {
                    'electors': row[6],
                    'polled': row[7],
                    'rejected': row[8],
                    'valid': row[9],
                },
                # space
                'subset_party_to_votes': {
                    party_id: row[11 + i]
                    for i, party_id in enumerate(self.PARTY_IDS)
                },
            }

            data_list.append(data)
        return data_list

    def write_json(
        self,
    ):
        path_prefix = self.xlsx_path[:-5].upper()
        json_path = path_prefix + '.json'
        JSONFile(json_path).write(self.data_list)
        n = len(self.data_list)
        log.info(f'Wrote {n} items to {json_path}')
        return json_path

    def write_js(self):
        path_prefix = self.xlsx_path[:-5].upper()
        js_path = path_prefix + '.js'
        var_name = os.path.split(path_prefix)[-1]

        var_value_str = json.dumps(self.data_list, indent=2)

        lines = [
            '// Auto-generated by ElectionResultsXlsx',
            '',
            f'const {var_name} = {var_value_str};',
            '',
            f'export default {var_name};',
            '',
        ]
        File(js_path).write_lines(lines)
        log.info(f'Wrote {len(self.data_list)} items to {js_path}')
        return js_path
